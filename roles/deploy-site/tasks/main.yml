---
- name: Create vhost conf (Apache)
  template: 
    src: templates/vhost.conf.j2 
    dest: /etc/apache2/sites-available/{{ item.key }}.conf
  with_dict: "{{ sites }}"
  notify: restart apache

- name: Enable the site (Apache)
  file:
    src: /etc/apache2/sites-available/{{ item.key }}.conf
    dest: /etc/apache2/sites-enabled/{{ item.key }}.conf
    state: link
  with_dict: "{{ sites }}"
  notify: restart apache

# This will return 200 in repo_check.results.item.status if the repo exists, 404 if not
- name: Check if a repo exists on git.megaphonetech.com
  uri:
    url: https://git.megaphonetech.com/api/v1/repos/{{ item.value.git_repo_owner + '/' + item.value.git_repo_name }}
    headers:
      Authorization: token {{ lookup('passwordstore', 'megaphone/gogs/api') }}
  with_dict: "{{ sites }}"
  register: repo_check
  failed_when: false

- name: Create the folder hierarchy
  file:
    path: "{{ item.value.gitroot }}"
    state: directory
    mode: 02770
    owner: "{{ ansible_user }}"
    group: "{{ item.value.run_as_user }}"
  become_user: root
  with_dict: "{{ sites }}"

# MySQL
- name: Create CMS database
  mysql_db:
    name: "{{ item.value.cms_db_name }}"
    state: present
  with_dict: "{{ sites }}"

- name: Create CRM database
  mysql_db:
    name: "{{ item.value.crm_db_name }}"
    state: present
  when: item.value.civicrm == 'Yes'
  with_dict: "{{ sites }}"

- name: Create MySQL User and set db permissions
  mysql_user:
    name: "{{ item.value.db_user }}"
    password: "{{ lookup('passwordstore', client + '/' + hostname + '/' + item.value.bare_url + '/mysql create=true length=32') }}"
    priv: "{{ item.value.cms_db_name }}.*:SELECT,INSERT,UPDATE,DELETE,CREATE,DROP,INDEX,ALTER,LOCK TABLES,CREATE TEMPORARY TABLES,CREATE VIEW/{{ item.value.crm_db_name }}.*:SELECT,INSERT,UPDATE,DELETE,CREATE,DROP,INDEX,ALTER,LOCK TABLES,CREATE TEMPORARY TABLES,TRIGGER,CREATE ROUTINE,ALTER ROUTINE,CREATE VIEW,REFERENCES"
    host: 'localhost' 
    state: present
  with_dict: "{{ sites }}"
- fail:

# Build a new WP site
- include_tasks: blank-wp.yml
  with_items: "{{ repo_check.results }}"
  become_user: "{{ ansible_user }}"
  when: item.status == 404 and item.item.value.cms == 'WordPress'

# TODO
# Next 3 steps ensure the Ansible user's deploy key is on each gogs repo

# For internal (git.megaphonetech.com) repos
- include_tasks: internal-git.yml
  with_items: "{{ repo_check.results }}"
  become_user: "{{ ansible_user }}"
  when: item.status == 200

