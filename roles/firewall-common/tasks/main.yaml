- name: iptables - Allow incoming on localhost
  iptables:
    chain: INPUT
    in_interface: lo
    jump: ACCEPT
    ip_version: "{{ item }}"
  with_items: "{{ ip_versions }}"
  notify: save iptables

- name: iptables - Accept connections
  iptables: 
    chain: INPUT
    destination_port: "{{ item[0].port }}"
    protocol: tcp
    jump: ACCEPT
    ip_version: "{{ item[1] }}"
    source: "{{ item[0].source|default(omit) }}"
  with_nested:
    - "{{ incoming_ports }}"
    - "{{ ip_versions }}"
  notify: save iptables

- name: iptables - Respond to established connections
  iptables:
    chain: OUTPUT
    ctstate: ESTABLISHED
    source_port: "{{ item[0].port }}"
    protocol: tcp
    jump: ACCEPT
    ip_version: "{{ item[1] }}"
  with_nested:
    - "{{ incoming_ports }}"
    - "{{ ip_versions }}"
  notify: save iptables

- name: iptables - Allow outgoing services
  iptables:
    chain: OUTPUT
    destination_port: "{{ item[0].port }}"
    protocol: "{{ item[0].protocol }}"
    jump: ACCEPT
    ip_version: "{{ item[1] }}"
  with_nested:
    - "{{ outgoing_ports }}"
    - "{{ ip_versions }}"
  notify: save iptables

- name: iptables - Allow established connections incoming
  iptables:
    chain: INPUT
    ctstate: ESTABLISHED,RELATED
    jump: ACCEPT
    ip_version: "{{ item }}"
  with_items: "{{ ip_versions }}"
  notify: save iptables

- name: Allow incoming ping ipv4
  iptables:
    chain: INPUT
    protocol: icmp
    icmp_type: 8
    ctstate: NEW,ESTABLISHED,RELATED
    jump: ACCEPT
    ip_version: ipv4
  notify: save iptables

- name: Allow outgoing ping ipv4
  iptables:
    chain: OUTPUT
    protocol: icmp
    jump: ACCEPT
    ip_version: ipv4
  notify: save iptables

- name: Allow incoming ping ipv6
  iptables:
    chain: INPUT
    protocol: icmpv6
    jump: ACCEPT
    ip_version: ipv6
  notify: save iptables

- name: Allow outgoing ping ipv6
  iptables:
    chain: OUTPUT
    protocol: icmpv6
    jump: ACCEPT
    ip_version: ipv6
  notify: save iptables

- name: Drop invalid packets
  iptables:
    chain: INPUT
    ctstate: INVALID
    jump: DROP
    ip_version: "{{ item }}"
  with_items: "{{ ip_versions }}"
  notify: save iptables

# The next two tasks are necessary for SSH tunnelling.
- name: Accept all on localhost incoming
  iptables:
    in_interface: lo
    chain: INPUT
    jump: ACCEPT

- name: Accept all on localhost outgoing
  iptables:
    out_interface: lo
    chain: OUTPUT
    jump: ACCEPT


- name: iptables - drop anything else incoming
  iptables:
    chain: "{{ item[0] }}"
    policy: DROP
    ip_version: "{{ item[1] }}"
  with_nested:
    - [ 'INPUT','OUTPUT' ]
    - "{{ ip_versions }}"
  notify: save iptables
